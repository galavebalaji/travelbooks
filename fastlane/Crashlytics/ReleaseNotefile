platform :ios do
  def generate_release_note_from_commits
    # todo: this need to be improve.
    release_note = generate_release_note_header
    commits = changelog_from_git_commits(between: ["#{ENV["FIRST_COMMIT_HASH"]}", "HEAD"],
                                         pretty: "%s",
                                         merge_commit_filtering: "exclude_merges").split("\n")
    latest_commit = commits.first
    task_id = latest_commit.match(/\[(#\d+)\]/i)&.captures&.first

    if (task_id)
      results = commits.select do |commit_message|
        commit_message.include?(task_id)
      end
      release_note += results.join("\n")
    end

    write_release_note(message: release_note)
  end

  def generate_release_note_from_pivotal_tracker
    release_note = generate_release_note_header

    stories = get_pivotal_tracker_stories(types: ["feature", "bug"],
                                          state: "accepted")
    story_names = stories.map { |story| "- #{story["name"]}" }
    release_note += story_names.join("\n")
    write_release_note(message: release_note)
  end

  def generate_release_note_header
    release_note = "#{ENV["PROJECT_NAME"]} (#{get_version_number}) "
    release_note += "\n"
  end

  def write_release_note(message: nil)
    if message.nil?
      raise "'message' should be passed to 'write_release_note(message: ...)'"
    end

    File.open("../release_notes.txt", "w") do |file|
      file.write(message)
    end
  end
end
